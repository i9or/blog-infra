---
- hosts: staging
  become: yes

  vars:
    os_environment:
      - key: PORT
        value: 3000
      - key: DB_FILENAME
        value: /home/deploy/app/db/production.db

  tasks:
    - name: Install dependencies
      apt:
        name:
          - curl
          - gnupg2
          - sqlite3
        state: present

    - name: Import the NodeSource GPG key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        id: 9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280
        state: present

    - name: Add NodeSource repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_18.x jammy main
        state: present

    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    - name: Install PM2
      npm:
        name: pm2
        global: yes

    - name: Import GitHub CLI GPG key
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        id: 23F3D4EA75716059
        state: present

    - name: Add GitHub CLI repository
      apt_repository:
        repo: deb https://cli.github.com/packages stable main
        state: present

    - name: Install GitHub CLI
      apt:
        name: gh
        state: present

    - name: Create DB directory
      file:
        path: /home/deploy/app/db
        state: directory
        owner: deploy
        group: deploy

    - name: Create empty DB
      file:
        path: /home/deploy/app/db/production.db
        state: touch
        owner: deploy
        group: deploy

    - name: Populate environment variables
      lineinfile:
        dest: /etc/environment
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      loop: "{{ os_environment }}"
